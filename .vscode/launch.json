{
  // 使用 IntelliSense 了解相关属性。
  // 悬停以查看现有属性的描述。
  // 欲了解更多信息，请访问: https://go.microsoft.com/fwlink/?linkid=830387
  "version": "0.2.0",
  "configurations": [
    // 解决文件地址中有UTF-8字符，导致报错的问题
    {
      "type": "pwa-node",
      "request": "launch",
      "name": "Launch program pwa-node",
      "attachSimplePort": 0,
      "program": "${file}"
    },
    // TS文件编译并调试
    {
      "type":"pwa-node",
      "request": "launch",
      "name": "TS Launch Node",
      "skipFiles":[
        "<node_internals>/**"
      ],
      "attachSimplePort": 0,
      "program": "${file}",
      "preLaunchTask": "tsc: -p tsconfig.json",
      "outFiles": [
        "!**/node_modules/**"
      ]
    },
    {
      "name": "Launch Node",
      "type": "node",
      "request": "launch",
      "skipFiles": ["<node_internals>/**"],
      "program": "${file}"
    },
    // 通过把processId属性设置为${command:PickProcess}，可以使调试器在启动时动态地显示Node.js进程列表
    {
      "name": "Attach to Process",
      "type": "node",
      "request": "attach",
      "processId": "${command:PickProcess}"
    },
    {
      "name": "Launch chrome localhost",
      "type": "chrome",
      "request": "launch",
      "url": "http://localhost/mypage.html",
      "webRoot": "${workspaceFolder}/wwwroot"
    },
    // 在chrome调试当前文件
    {
      "name": "Launch chrome Current File",
      "type": "chrome",
      "request": "launch",
      "file": "${file}"
    },
    // 将VSCode附加到Chrome浏览器，需要在远程调试模式下启动Chrome浏览器，在命令行输入命令来启动Chrom浏览器。
    {
      "name": "Attach to url with files served from ./out",
      "type": "chrome",
      "request": "attach",
      "port": 9222,
      "url": "C:\\Program Files (x86)\\Google\\Chrome\\Application\\chrome.exe",
      "webRoot": "${workspaceFolder}/out"
    },
    // 在Firefox调试当前文件
    {
      "name": "Launch firefox Current File",
      "type": "firefox",
      "request": "launch",
      "reAttach": true,
      "file": "${file}"
    },
    {
      "name": "Launch firefox localhost",
      "type": "firefox",
      "request": "launch",
      "url": "http://localhost/index.html",
      "webRoot": "${workspaceFolder}"
    },
    // 远程调试，只需要添加一个address属性
    {
      "type": "node",
      "request": "attach",
      "name": "Attach to remote",
      "address": "TCP/IP address of process to be debugged",
      // 9229 是 --inpect 和 --inspect-brk的默认调试端口
      "port": 9229
    },
    // 远程调试，设置本地文件夹的根目录（localRoot），设置远程文件夹的根目录（remoteRoot），设置后，可以在本地打开远程的可编辑源代码
    {
      "type": "node",
      "request": "attach",
      "name": "Attach to remote Edit Source code",
      "address": "TCP/IP address of process to  be debugger",
      "port": 9229,
      "localRoot": "${workspaceFolder}",
      "remoteRoot": "C:\\User\\username\\progject\\server"
    }
  ],
  "compounds": [
    {
      "name": "Launch localhost",
      "configurations": ["Launch chrome Current File"],
      "preLaunchTask": "${defaultBuildTask}"
    }
  ]
}
